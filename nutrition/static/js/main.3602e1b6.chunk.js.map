{"version":3,"sources":["components/ChartComponent.tsx","containers/ChartContainer.tsx","actions/AppAction.tsx","containers/ItemContainer.tsx","components/ItemComponent.tsx","App.tsx","generateList.tsx","reducers/index.tsx","store.tsx","index.tsx"],"names":["legend","label","backgroundColor","borderColor","borderWidth","data","yAxisID","colors","createDataSet","props","labels","datasets","items","filter","i","selecetd","map","n","name","length","nutrients","value","concat","options","scales","xAxes","stacked","yAxes","id","ticks","max","display","position","connect","state","dispatch","react","className","react_chartjs_2_es","appActions","toggleSelected","actionCreatorFactory","actionCreator","href","type","checked","onChange","e","App","react_default","a","createElement","ChartContainer","ItemContainer","itemId","initialState","list","Array","Source","forEach","item","push","generateList","reducer","reducerWithInitialState","case","store","createStore","render","es","src_App","document","getElementById"],"mappings":"kKAQMA,EAAS,CACXC,MAAO,eACPC,gBAAiB,mBACjBC,YAAa,kBACbC,YAAa,EACbC,KAAM,CAAC,EAAG,IAAK,MACfC,QAAS,UAGPC,EAAS,CAAC,uBAAwB,uBAAwB,wBAE1DC,EAAgB,SAACC,GAenB,MAda,CACTC,OAAQ,CAAC,2BAAQ,eAAM,4BACvBC,SACIF,EAAMG,MAAMC,OAAO,SAAAC,GAAC,OAAIA,EAAEC,WAAUC,IAAI,SAACF,EAAGG,GACxC,MAAO,CACHhB,MAAOa,EAAEI,KACThB,gBAAiBK,EAAOU,EAAIV,EAAOY,QACnChB,YAAa,sBACbC,YAAa,EACbC,KAAM,CAACS,EAAEM,UAAU,GAAGC,MAAOP,EAAEM,UAAU,GAAGC,MAAOP,EAAEM,UAAU,GAAGC,OAClEf,QAAS,cAEdgB,OAAOtB,KAQhBuB,EAAU,CACZC,OAAQ,CACJC,MAAO,CAAC,CAACC,SAAS,IAClBC,MAAO,CAAC,CACJC,GAAI,WACJF,SAAS,EACTG,MAAO,CACHC,IAAK,MAEX,CACEF,GAAI,SACJG,SAAS,EACTC,SAAU,QACVH,MAAO,CACHC,IAAK,SC7CNG,cAFS,SAACC,GAAD,OAAqBA,GADlB,SAACC,GAAD,MAAsC,CAAEA,aAGpDF,CDmDoC,SAACxB,GAClD,OACI2B,EAAA,qBAAKC,UAAU,SACbD,EAAA,cAACE,EAAA,EAAD,CAAKjC,KAAMG,EAAcC,GAAQc,QAASA,eE3DrCgB,EAAa,CAExBC,qBAJoBC,IAIJC,CAAsB,4BCczBT,cAFS,SAACC,GAAD,OAAqBA,GAPlB,SAACC,GACxB,MAAQ,CACJK,eAAgB,SAACZ,GAAD,OAAgBO,EAASI,EAAWC,eAAeZ,OAO5DK,CCZmC,SAACxB,GACjD,OACE2B,EAAA,qBAAKC,UAAU,QAAf,uBACOD,EAAA,mBAAGO,KAAK,2EAAR,mFACLP,EAAA,wBACG3B,EAAMG,MAAMI,IAAI,SAAAF,GAAC,OAAKsB,EAAA,wBACrBA,EAAA,uBAAOQ,KAAK,WAAWC,QAAS/B,EAAEC,SAAU+B,SAAU,SAACC,GAAD,OAAOtC,EAAM+B,eAAe1B,EAAEc,OACnFd,EAAEI,YCFE8B,EATO,WACpB,OACEC,EAAAC,EAAAC,cAAA,OAAKd,UAAU,OACbY,EAAAC,EAAAC,cAACC,EAAD,MACAH,EAAAC,EAAAC,cAACE,EAAD,gCCLFC,EAAS,ECcb,IACMC,EAAyB,CAC3B3C,MDfW,WACX,IAAM4C,EAAO,IAAIC,MAIjB,OAHAC,EAAOC,QAAQ,SAAAC,GACXJ,EAAKK,KAAK,CAACjC,GAAI0B,IAAUpC,KAAM0C,EAAK1C,KAAMH,UAAU,EAAOK,UAAWwC,EAAKxC,cAExEoC,ECQEM,IAKPtB,EAAiB,SAAC5B,EAAoBgB,GAArB,OACnBhB,EAAMI,IAAI,SAAAF,GAIN,OAHIA,EAAEc,KAAOA,IACTd,EAAEC,UAAYD,EAAEC,UAEbD,KAIFiD,EAAUC,kCAAwBT,GAC1CU,KAAK1B,EAAWC,eAAgB,SAACN,EAAiBN,GAC/C,MAAO,CAAEhB,MAAO4B,EAAeN,EAAMtB,MAAOgB,MCxBrCsC,EAFDC,YAAYJ,UCA1BK,iBACInB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAUH,MAAOA,GACbjB,EAAAC,EAAAC,cAACmB,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.3602e1b6.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { AppState } from '../store'\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\ninterface OwnProps {}\r\n\r\ntype AppProps = OwnProps & AppState;\r\n\r\nconst legend = {\r\n    label: '凡例',\r\n    backgroundColor: 'rgba(0, 0, 0, 0)',\r\n    borderColor: 'rgba(255,0,0,1)',\r\n    borderWidth: 2,\r\n    data: [0, 800, 1500],\r\n    yAxisID: \"legend\"\r\n};\r\n\r\nconst colors = ['rgba(255,99,132,0.2)', 'rgba(99,255,132,0.2)', 'rgba(132,99,255,0.2)']\r\n\r\nconst createDataSet = (props: AppProps) => {\r\n    const data = {\r\n        labels: ['カロリー', 'リン', 'カリウム'],\r\n        datasets:\r\n            props.items.filter(i => i.selecetd).map((i, n) => {\r\n                return {\r\n                    label: i.name,\r\n                    backgroundColor: colors[n % colors.length],\r\n                    borderColor: 'rgba(255,255,255,0)',\r\n                    borderWidth: 1,\r\n                    data: [i.nutrients[1].value, i.nutrients[8].value, i.nutrients[6].value],\r\n                    yAxisID: \"y-axis-1\",\r\n                };\r\n            }).concat(legend),\r\n    };\r\n    return data;\r\n}\r\n\r\n// const createOptions = (props: AppProps) => {\r\n//     return options;\r\n// };\r\nconst options = {\r\n    scales: {\r\n        xAxes: [{stacked: true}],\r\n        yAxes: [{\r\n            id: \"y-axis-1\",\r\n            stacked: true,\r\n            ticks: {\r\n                max: 2000,\r\n            }\r\n        },{\r\n            id: \"legend\",\r\n            display: false,\r\n            position: \"right\",\r\n            ticks: {\r\n                max: 2000,\r\n            }\r\n        }],\r\n    }\r\n}\r\n\r\nexport const ChartComponent: React.SFC<AppProps> = (props: AppProps) => {\r\n  return (\r\n      <div className=\"chart\">\r\n        <Bar data={createDataSet(props)} options={options} />\r\n      </div>\r\n  );\r\n};\r\n","import { Action } from 'typescript-fsa';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from '../store';\r\nimport { ChartComponent } from '../components/ChartComponent';\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action<any>>) => ({ dispatch });\r\nconst mapStateToProps = (state: AppState) => state;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartComponent);\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\n\r\nexport const appActions = {\r\n  //updateSelected: actionCreator<boolean>('ACTIONS_UPDATE_SELECTED'),\r\n  toggleSelected: actionCreator<number>('ACTIONS_TOGGLE_SELECTED'),\r\n};","import { Action } from 'typescript-fsa';\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { AppState } from '../store';\r\nimport { appActions } from '../actions/AppAction'\r\nimport { ItemComponent } from '../components/ItemComponent';\r\n\r\nexport interface AppActions {\r\n    toggleSelected: (v: number) => Action<number>;\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<Action<any>>) => {\r\n    return  {\r\n        toggleSelected: (id: number) => dispatch(appActions.toggleSelected(id))\r\n    }\r\n};\r\n\r\n//const mapDispatchToProps = (dispatch: Dispatch<Action<any>>) => {dispatch};\r\nconst mapStateToProps = (state: AppState) => state;\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemComponent);","import * as React from 'react';\r\nimport { AppState } from '../store'\r\nimport { AppActions } from '../containers/ItemContainer'\r\n\r\ninterface OwnProps {}\r\n\r\ntype AppProps = OwnProps & AppState & AppActions;\r\n\r\nexport const ItemComponent: React.SFC<AppProps> = (props: AppProps) => {\r\n  return (\r\n    <div className=\"menu\">\r\n      引用元: <a href=\"http://www.mcdonalds.co.jp/quality/allergy_Nutrition/nutrient2.php?id=1\">マクドナルド 栄養成分一覧表</a>\r\n      <ul>\r\n        {props.items.map(i => (<li>\r\n          <input type=\"checkbox\" checked={i.selecetd} onChange={(e) => props.toggleSelected(i.id)} />\r\n          {i.name}</li>))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n// export default class extends React.Component<AppProps, AppState> {\r\n//   private toggleSelected(id: number) {\r\n//     this.props.\r\n//   }\r\n\r\n//   public render() {\r\n//     return (\r\n//       <ul>\r\n//         {this.state.items.map(i => (<li>\r\n//           <input type=\"checkbox\" checked={i.selecetd} onChange={(e) => props.toggleSelected(i.id)} />\r\n//           {i.name}</li>))}\r\n//       </ul>\r\n//     );\r\n//   }\r\n// }","import React from 'react';\nimport ChartContainer from './containers/ChartContainer'\nimport ItemContainer from './containers/ItemContainer'\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <ChartContainer />\n      <ItemContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import { ItemState } from './reducers'\r\nimport Source from './data/McDonald_201906.json'\r\n\r\nlet itemId = 1;\r\nexport default function generateList() {\r\n    const list = new Array<ItemState>();\r\n    Source.forEach(item => {\r\n        list.push({id: itemId++, name: item.name, selecetd: false, nutrients: item.nutrients});\r\n    });\r\n    return list;\r\n}","import { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport { appActions } from '../actions/AppAction'\r\nimport { AppState } from '../store'\r\nimport generateList from '../generateList'\r\n\r\nexport interface Nutrition {\r\n    name: string;\r\n    value: number;\r\n}\r\n\r\nexport interface ItemState {\r\n    id: number,\r\n    selecetd: boolean,\r\n    name: string;\r\n    nutrients: Nutrition[];\r\n}\r\n\r\nconst list = generateList();\r\nconst initialState: AppState = {\r\n    items: list,\r\n};\r\n\r\nconst toggleSelected = (items: ItemState[], id: number): ItemState[] => (\r\n    items.map(i => {\r\n        if (i.id === id) {\r\n            i.selecetd = !i.selecetd;\r\n        }\r\n        return i;\r\n    })\r\n)\r\n\r\nexport const reducer = reducerWithInitialState(initialState)\r\n    .case(appActions.toggleSelected, (state: AppState, id: number) => {\r\n        return { items: toggleSelected(state.items, id) };\r\n    });\r\n\r\n// export default reducerWithInitialState(initialState)\r\n//     .case(appActions.toggleSelected, (state: AppState, id: number) => ({\r\n//         ...state,\r\n//         items: toggleSelected(state.items, id)\r\n//     }))\r\n//     .build();","import { createStore  } from 'redux'\r\nimport { reducer, ItemState } from './reducers'\r\n\r\nexport type AppState = {\r\n    items: ItemState[]\r\n}\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\nimport './index.css';\n\nrender(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}